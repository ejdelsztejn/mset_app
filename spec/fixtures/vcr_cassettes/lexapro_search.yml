---
http_interactions:
- request:
    method: get
    uri: https://mset-api-service.herokuapp.com/med_search?medication_name=Lexapro
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: 'OK '
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - text/html;charset=utf-8
      Content-Length:
      - '10358'
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      Server:
      - WEBrick/1.4.2 (Ruby/2.5.3/2018-10-18)
      Date:
      - Tue, 15 Sep 2020 01:23:38 GMT
      Via:
      - 1.1 vegur
    body:
      encoding: UTF-8
      string: |-
        {
          "meta": {
            "disclaimer": "Do not rely on openFDA to make decisions regarding medical care. While we make every effort to ensure that data is accurate, you should assume all results are unvalidated. We may limit or otherwise restrict your access to the API in line with our Terms of Service.",
            "terms": "https://open.fda.gov/terms/",
            "license": "https://open.fda.gov/license/",
            "last_updated": "2020-09-14",
            "results": {
              "skip": 0,
              "limit": 10,
              "total": 6
            }
          },
          "results": [
            {
              "product_ndc": "0456-2010",
              "generic_name": "ESCITALOPRAM OXALATE",
              "labeler_name": "Allergan, Inc.",
              "packaging": [
                {
                  "marketing_start_date": "20020814",
                  "package_ndc": "0456-2010-01",
                  "description": "100 TABLET, FILM COATED in 1 BOTTLE (0456-2010-01)",
                  "sample": false
                },
                {
                  "marketing_start_date": "20020814",
                  "package_ndc": "0456-2010-63",
                  "description": "10 BLISTER PACK in 1 BOX, UNIT-DOSE (0456-2010-63)  > 10 TABLET, FILM COATED in 1 BLISTER PACK (0456-2010-11)",
                  "sample": false
                }
              ],
              "brand_name": "Lexapro",
              "active_ingredients": [
                {
                  "strength": "10 mg/1",
                  "name": "ESCITALOPRAM OXALATE"
                }
              ],
              "finished": true,
              "openfda": {
                "is_original_packager": [
                  true
                ],
                "spl_set_id": [
                  "13bb8267-1cab-43e5-acae-55a4d957630a"
                ],
                "upc": [
                  "0304562101084"
                ],
                "manufacturer_name": [
                  "Allergan, Inc."
                ],
                "unii": [
                  "5U85DBW7LO"
                ]
              },
              "listing_expiration_date": "20211231",
              "marketing_category": "NDA",
              "dosage_form": "TABLET, FILM COATED",
              "spl_id": "3b8a75b8-8bcc-463f-99f3-3dcaef07ea53",
              "route": [
                "ORAL"
              ],
              "marketing_start_date": "20020814",
              "product_type": "HUMAN PRESCRIPTION DRUG",
              "product_id": "0456-2010_3b8a75b8-8bcc-463f-99f3-3dcaef07ea53",
              "application_number": "NDA021323",
              "brand_name_base": "Lexapro",
              "pharm_class": [
                "Serotonin Reuptake Inhibitor [EPC]",
                "Serotonin Uptake Inhibitors [MoA]"
              ]
            },
            {
              "product_ndc": "0456-2005",
              "generic_name": "ESCITALOPRAM OXALATE",
              "labeler_name": "Allergan, Inc.",
              "packaging": [
                {
                  "marketing_start_date": "20020814",
                  "package_ndc": "0456-2005-01",
                  "description": "100 TABLET, FILM COATED in 1 BOTTLE (0456-2005-01)",
                  "sample": false
                }
              ],
              "brand_name": "Lexapro",
              "active_ingredients": [
                {
                  "strength": "5 mg/1",
                  "name": "ESCITALOPRAM OXALATE"
                }
              ],
              "finished": true,
              "openfda": {
                "is_original_packager": [
                  true
                ],
                "spl_set_id": [
                  "13bb8267-1cab-43e5-acae-55a4d957630a"
                ],
                "upc": [
                  "0304562101084"
                ],
                "manufacturer_name": [
                  "Allergan, Inc."
                ],
                "unii": [
                  "5U85DBW7LO"
                ]
              },
              "listing_expiration_date": "20211231",
              "marketing_category": "NDA",
              "dosage_form": "TABLET, FILM COATED",
              "spl_id": "3b8a75b8-8bcc-463f-99f3-3dcaef07ea53",
              "route": [
                "ORAL"
              ],
              "marketing_start_date": "20020814",
              "product_type": "HUMAN PRESCRIPTION DRUG",
              "product_id": "0456-2005_3b8a75b8-8bcc-463f-99f3-3dcaef07ea53",
              "application_number": "NDA021323",
              "brand_name_base": "Lexapro",
              "pharm_class": [
                "Serotonin Reuptake Inhibitor [EPC]",
                "Serotonin Uptake Inhibitors [MoA]"
              ]
            },
            {
              "product_ndc": "0456-2020",
              "generic_name": "ESCITALOPRAM OXALATE",
              "labeler_name": "Allergan, Inc.",
              "packaging": [
                {
                  "marketing_start_date": "20020814",
                  "package_ndc": "0456-2020-01",
                  "description": "100 TABLET, FILM COATED in 1 BOTTLE (0456-2020-01)",
                  "sample": false
                },
                {
                  "marketing_start_date": "20020814",
                  "package_ndc": "0456-2020-63",
                  "description": "10 BLISTER PACK in 1 BOX, UNIT-DOSE (0456-2020-63)  > 10 TABLET, FILM COATED in 1 BLISTER PACK (0456-2020-11)",
                  "sample": false
                }
              ],
              "brand_name": "Lexapro",
              "active_ingredients": [
                {
                  "strength": "20 mg/1",
                  "name": "ESCITALOPRAM OXALATE"
                }
              ],
              "finished": true,
              "openfda": {
                "is_original_packager": [
                  true
                ],
                "spl_set_id": [
                  "13bb8267-1cab-43e5-acae-55a4d957630a"
                ],
                "upc": [
                  "0304562101084"
                ],
                "manufacturer_name": [
                  "Allergan, Inc."
                ],
                "unii": [
                  "5U85DBW7LO"
                ]
              },
              "listing_expiration_date": "20211231",
              "marketing_category": "NDA",
              "dosage_form": "TABLET, FILM COATED",
              "spl_id": "3b8a75b8-8bcc-463f-99f3-3dcaef07ea53",
              "route": [
                "ORAL"
              ],
              "marketing_start_date": "20020814",
              "product_type": "HUMAN PRESCRIPTION DRUG",
              "product_id": "0456-2020_3b8a75b8-8bcc-463f-99f3-3dcaef07ea53",
              "application_number": "NDA021323",
              "brand_name_base": "Lexapro",
              "pharm_class": [
                "Serotonin Reuptake Inhibitor [EPC]",
                "Serotonin Uptake Inhibitors [MoA]"
              ]
            },
            {
              "product_ndc": "55289-768",
              "generic_name": "ESCITALOPRAM OXALATE",
              "labeler_name": "PD-Rx Pharmaceuticals, Inc.",
              "packaging": [
                {
                  "marketing_start_date": "20110520",
                  "package_ndc": "55289-768-30",
                  "description": "30 TABLET, FILM COATED in 1 BOTTLE, PLASTIC (55289-768-30)",
                  "sample": false
                }
              ],
              "brand_name": "Lexapro",
              "active_ingredients": [
                {
                  "strength": "10 mg/1",
                  "name": "ESCITALOPRAM OXALATE"
                }
              ],
              "finished": true,
              "openfda": {
                "spl_set_id": [
                  "cd65aa65-94d0-4e88-8af3-20f692432644"
                ],
                "upc": [
                  "0355289768302"
                ],
                "manufacturer_name": [
                  "PD-Rx Pharmaceuticals, Inc."
                ],
                "unii": [
                  "5U85DBW7LO"
                ]
              },
              "listing_expiration_date": "20211231",
              "marketing_category": "NDA",
              "dosage_form": "TABLET, FILM COATED",
              "spl_id": "adb973ca-94f1-d4bc-e053-2995a90a4577",
              "route": [
                "ORAL"
              ],
              "marketing_start_date": "20110520",
              "product_type": "HUMAN PRESCRIPTION DRUG",
              "product_id": "55289-768_adb973ca-94f1-d4bc-e053-2995a90a4577",
              "application_number": "NDA021323",
              "brand_name_base": "Lexapro",
              "pharm_class": [
                "Serotonin Reuptake Inhibitor [EPC]",
                "Serotonin Uptake Inhibitors [MoA]"
              ]
            },
            {
              "product_ndc": "55289-828",
              "generic_name": "ESCITALOPRAM OXALATE",
              "labeler_name": "PD-Rx Pharmaceuticals, Inc.",
              "packaging": [
                {
                  "marketing_start_date": "20120118",
                  "package_ndc": "55289-828-30",
                  "description": "30 TABLET, FILM COATED in 1 BOTTLE, PLASTIC (55289-828-30)",
                  "sample": false
                }
              ],
              "brand_name": "Lexapro",
              "active_ingredients": [
                {
                  "strength": "20 mg/1",
                  "name": "ESCITALOPRAM OXALATE"
                }
              ],
              "finished": true,
              "openfda": {
                "spl_set_id": [
                  "e2fc3b79-3424-43e3-99c7-7ac5017b0b70"
                ],
                "manufacturer_name": [
                  "PD-Rx Pharmaceuticals, Inc."
                ],
                "unii": [
                  "5U85DBW7LO"
                ],
                "rxcui": [
                  "351250",
                  "352273"
                ]
              },
              "listing_expiration_date": "20211231",
              "marketing_category": "NDA",
              "dosage_form": "TABLET, FILM COATED",
              "spl_id": "a6bb0dcf-80f9-5a9d-e053-2a95a90a56b8",
              "route": [
                "ORAL"
              ],
              "marketing_start_date": "20020814",
              "product_type": "HUMAN PRESCRIPTION DRUG",
              "product_id": "55289-828_a6bb0dcf-80f9-5a9d-e053-2a95a90a56b8",
              "application_number": "NDA021323",
              "brand_name_base": "Lexapro",
              "pharm_class": [
                "Serotonin Reuptake Inhibitor [EPC]",
                "Serotonin Uptake Inhibitors [MoA]"
              ]
            },
            {
              "product_ndc": "63629-2981",
              "generic_name": "ESCITALOPRAM OXALATE",
              "labeler_name": "Bryant Ranch Prepack",
              "packaging": [
                {
                  "marketing_start_date": "20051025",
                  "package_ndc": "63629-2981-3",
                  "description": "60 TABLET, FILM COATED in 1 BOTTLE (63629-2981-3)",
                  "sample": false
                },
                {
                  "marketing_start_date": "20051025",
                  "package_ndc": "63629-2981-1",
                  "description": "30 TABLET, FILM COATED in 1 BOTTLE (63629-2981-1)",
                  "sample": false
                },
                {
                  "marketing_start_date": "20051025",
                  "package_ndc": "63629-2981-2",
                  "description": "28 TABLET, FILM COATED in 1 BOTTLE (63629-2981-2)",
                  "sample": false
                }
              ],
              "brand_name": "Lexapro",
              "active_ingredients": [
                {
                  "strength": "20 mg/1",
                  "name": "ESCITALOPRAM OXALATE"
                }
              ],
              "finished": true,
              "openfda": {
                "spl_set_id": [
                  "4a08b6cf-7ba0-54a9-14e0-a6e8d1e4854e"
                ],
                "manufacturer_name": [
                  "Bryant Ranch Prepack"
                ],
                "unii": [
                  "5U85DBW7LO"
                ],
                "rxcui": [
                  "351250",
                  "352273"
                ]
              },
              "listing_expiration_date": "20201231",
              "marketing_category": "NDA",
              "dosage_form": "TABLET, FILM COATED",
              "spl_id": "a7c19a9e-6dc2-40b7-8e80-48d5e54e14f1",
              "route": [
                "ORAL"
              ],
              "marketing_start_date": "20020814",
              "product_type": "HUMAN PRESCRIPTION DRUG",
              "product_id": "63629-2981_a7c19a9e-6dc2-40b7-8e80-48d5e54e14f1",
              "application_number": "NDA021323",
              "brand_name_base": "Lexapro",
              "pharm_class": [
                "Serotonin Reuptake Inhibitor [EPC]",
                "Serotonin Uptake Inhibitors [MoA]"
              ]
            }
          ]
        }
  recorded_at: Tue, 15 Sep 2020 01:23:38 GMT
- request:
    method: get
    uri: https://mset-api-service.herokuapp.com/sym_search?product_ndc=0456-2010
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: 'OK '
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - text/html;charset=utf-8
      Content-Length:
      - '139602'
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      Server:
      - WEBrick/1.4.2 (Ruby/2.5.3/2018-10-18)
      Date:
      - Tue, 15 Sep 2020 01:23:38 GMT
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 15 Sep 2020 01:23:38 GMT
recorded_with: VCR 6.0.0
